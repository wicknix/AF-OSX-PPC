/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"

[ptr] native JSRuntime(JSRuntime);
[ptr] native JSContext(JSContext);
native xpcGCCallback(xpcGCCallback);
native xpcContextCallback(xpcContextCallback);

%{C++

#include "jsapi.h"  // for JSGCStatus

typedef void
(* xpcGCCallback)(JSGCStatus status);

typedef bool
(* xpcContextCallback)(JSContext* cx, unsigned operation);

%}

interface nsIBackstagePass;

[uuid( 2ac111f2-e492-488e-85df-353c453e98f3)]
interface nsIJSRuntimeService : nsISupports
{
    readonly attribute JSRuntime        runtime;

    /**
     * Register additional GC callback which will run after the
     * standard XPConnect callback.
     */
    [noscript, notxpcom] void registerGCCallback(in xpcGCCallback func);
    [noscript, notxpcom] void unregisterGCCallback(in xpcGCCallback func);

    /**
     * Register additional context callback which will run after the
     * standard XPConnect callback.
     */
    [noscript, notxpcom] void registerContextCallback(in xpcContextCallback func);
    [noscript, notxpcom] void unregisterContextCallback(in xpcContextCallback func);
};
